/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2020-03-15 11:13:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sampleOrderServiceImplProxy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<TITLE>Result</TITLE>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("<H1>Result</H1>\r\n");
      out.write("\r\n");
      com.mtit.Order.OrderServiceImplProxy sampleOrderServiceImplProxyid = null;
      synchronized (session) {
        sampleOrderServiceImplProxyid = (com.mtit.Order.OrderServiceImplProxy) _jspx_page_context.getAttribute("sampleOrderServiceImplProxyid", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (sampleOrderServiceImplProxyid == null){
          sampleOrderServiceImplProxyid = new com.mtit.Order.OrderServiceImplProxy();
          _jspx_page_context.setAttribute("sampleOrderServiceImplProxyid", sampleOrderServiceImplProxyid, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');

if (request.getParameter("endpoint") != null && request.getParameter("endpoint").length() > 0)
sampleOrderServiceImplProxyid.setEndpoint(request.getParameter("endpoint"));

      out.write("\r\n");
      out.write("\r\n");

String method = request.getParameter("method");
int methodID = 0;
if (method == null) methodID = -1;

if(methodID != -1) methodID = Integer.parseInt(method);
boolean gotMethod = false;

try {
switch (methodID){ 
case 2:
        gotMethod = true;
        java.lang.String getEndpoint2mtemp = sampleOrderServiceImplProxyid.getEndpoint();
if(getEndpoint2mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getEndpoint2mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempResultreturnp3 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getEndpoint2mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp3 );
      out.write("\r\n");
      out.write("        ");

}
break;
case 5:
        gotMethod = true;
        String endpoint_0id=  request.getParameter("endpoint8");
            java.lang.String endpoint_0idTemp = null;
        if(!endpoint_0id.equals("")){
         endpoint_0idTemp  = endpoint_0id;
        }
        sampleOrderServiceImplProxyid.setEndpoint(endpoint_0idTemp);
break;
case 10:
        gotMethod = true;
        com.mtit.Order.OrderServiceImpl getOrderServiceImpl10mtemp = sampleOrderServiceImplProxyid.getOrderServiceImpl();
if(getOrderServiceImpl10mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getOrderServiceImpl10mtemp );
      out.write('\r');
      out.write('\n');

}else{

      out.write("\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD COLSPAN=\"3\" ALIGN=\"LEFT\">returnp:</TD>\r\n");
      out.write("</TABLE>\r\n");

}
break;
case 15:
        gotMethod = true;
        String orderId_1id=  request.getParameter("orderId32");
        int orderId_1idTemp  = Integer.parseInt(orderId_1id);
        com.mtit.Order.Order getOrder15mtemp = sampleOrderServiceImplProxyid.getOrder(orderId_1idTemp);
if(getOrder15mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getOrder15mtemp );
      out.write('\r');
      out.write('\n');

}else{

      out.write("\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD COLSPAN=\"3\" ALIGN=\"LEFT\">returnp:</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">orderId:</TD>\r\n");
      out.write("<TD>\r\n");

if(getOrder15mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(getOrder15mtemp.getOrderId()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">totalPrice:</TD>\r\n");
      out.write("<TD>\r\n");

if(getOrder15mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(getOrder15mtemp.getTotalPrice()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">date:</TD>\r\n");
      out.write("<TD>\r\n");

if(getOrder15mtemp != null){
java.lang.String typedate22 = getOrder15mtemp.getDate();
        String tempResultdate22 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(typedate22));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultdate22 );
      out.write("\r\n");
      out.write("        ");

}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">sellerId:</TD>\r\n");
      out.write("<TD>\r\n");

if(getOrder15mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(getOrder15mtemp.getSellerId()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">productId:</TD>\r\n");
      out.write("<TD>\r\n");

if(getOrder15mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(getOrder15mtemp.getProductId()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">quantity:</TD>\r\n");
      out.write("<TD>\r\n");

if(getOrder15mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(getOrder15mtemp.getQuantity()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("<TR>\r\n");
      out.write("<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("<TD COLSPAN=\"2\" ALIGN=\"LEFT\">buyerId:</TD>\r\n");
      out.write("<TD>\r\n");

if(getOrder15mtemp != null){

      out.write('\r');
      out.write('\n');
      out.print(getOrder15mtemp.getBuyerId()
);
}
      out.write("\r\n");
      out.write("</TD>\r\n");
      out.write("</TABLE>\r\n");

}
break;
case 34:
        gotMethod = true;
        String orderId_3id=  request.getParameter("orderId39");
        int orderId_3idTemp  = Integer.parseInt(orderId_3id);
        String totalPrice_4id=  request.getParameter("totalPrice41");
        float totalPrice_4idTemp  = Float.parseFloat(totalPrice_4id);
        String date_5id=  request.getParameter("date43");
            java.lang.String date_5idTemp = null;
        if(!date_5id.equals("")){
         date_5idTemp  = date_5id;
        }
        String sellerId_6id=  request.getParameter("sellerId45");
        int sellerId_6idTemp  = Integer.parseInt(sellerId_6id);
        String productId_7id=  request.getParameter("productId47");
        int productId_7idTemp  = Integer.parseInt(productId_7id);
        String quantity_8id=  request.getParameter("quantity49");
        int quantity_8idTemp  = Integer.parseInt(quantity_8id);
        String buyerId_9id=  request.getParameter("buyerId51");
        int buyerId_9idTemp  = Integer.parseInt(buyerId_9id);
        
      out.write("\r\n");
      out.write("        ");
      com.mtit.Order.Order com1mtit1Order1Order_2id = null;
      synchronized (session) {
        com1mtit1Order1Order_2id = (com.mtit.Order.Order) _jspx_page_context.getAttribute("com1mtit1Order1Order_2id", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (com1mtit1Order1Order_2id == null){
          com1mtit1Order1Order_2id = new com.mtit.Order.Order();
          _jspx_page_context.setAttribute("com1mtit1Order1Order_2id", com1mtit1Order1Order_2id, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("        ");

        com1mtit1Order1Order_2id.setOrderId(orderId_3idTemp);
        com1mtit1Order1Order_2id.setTotalPrice(totalPrice_4idTemp);
        com1mtit1Order1Order_2id.setDate(date_5idTemp);
        com1mtit1Order1Order_2id.setSellerId(sellerId_6idTemp);
        com1mtit1Order1Order_2id.setProductId(productId_7idTemp);
        com1mtit1Order1Order_2id.setQuantity(quantity_8idTemp);
        com1mtit1Order1Order_2id.setBuyerId(buyerId_9idTemp);
        boolean addOrder34mtemp = sampleOrderServiceImplProxyid.addOrder(com1mtit1Order1Order_2id);
        String tempResultreturnp35 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(addOrder34mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp35 );
      out.write("\r\n");
      out.write("        ");

break;
case 53:
        gotMethod = true;
        String orderId_10id=  request.getParameter("orderId56");
        int orderId_10idTemp  = Integer.parseInt(orderId_10id);
        boolean deleteOrder53mtemp = sampleOrderServiceImplProxyid.deleteOrder(orderId_10idTemp);
        String tempResultreturnp54 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(deleteOrder53mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp54 );
      out.write("\r\n");
      out.write("        ");

break;
case 58:
        gotMethod = true;
        com.mtit.Order.Order[] getAllOrders58mtemp = sampleOrderServiceImplProxyid.getAllOrders();
if(getAllOrders58mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getAllOrders58mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempreturnp59 = null;
        if(getAllOrders58mtemp != null){
        java.util.List listreturnp59= java.util.Arrays.asList(getAllOrders58mtemp);
        tempreturnp59 = listreturnp59.toString();
        }
        
      out.write("\r\n");
      out.write("        ");
      out.print(tempreturnp59);
      out.write("\r\n");
      out.write("        ");

}
break;
}
} catch (Exception e) { 

      out.write("\r\n");
      out.write("Exception: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.toString()) );
      out.write("\r\n");
      out.write("Message: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.getMessage()) );
      out.write('\r');
      out.write('\n');

return;
}
if(!gotMethod){

      out.write("\r\n");
      out.write("result: N/A\r\n");

}

      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
